events {
    worker_connections 2048;
}

http {
    proxy_cache_path C:/Users/gimna/Desktop/BMSTU/WEB/bmstu-web/cache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;
    
    log_format custom_combined '$proxy_add_x_forwarded_for - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for" "$upstream_addr"';

    access_log C:/Users/gimna/Desktop/BMSTU/WEB/bmstu-web/nginx/logs/access.log custom_combined;

    upstream backend  {
        server localhost:5191 weight=2; 
        server localhost:5000 weight=1;         
        server localhost:5001 weight=1;         
    }

    upstream main_backend { 
        server localhost:5191;
    }

    upstream mirror_backend {
        server localhost:5080;
    }

    server {
        listen 8080;
        add_header Server "PaperKiller";
        server_name PaperKiller;
        charset utf-8;
        root "C:/Users/gimna/Desktop/BMSTU/WEB/bmstu-web/static/";

        # Сжатие
        ## Включить сжатие
        gzip on;
        ## Уровень сжатия, макс уровень = 9 (медленный)
        gzip_comp_level 5;
        gzip_disable "msie6";
        ## Типы файлов, для которых будет работать сжатие
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript image/jpeg;
        gzip_min_length  256;
        gzip_proxied any;

        # Кеширование
        ## Шаблон построения ключа кеша
        proxy_cache_key $host$uri$is_args$args;
        ## Зона разделяемой памяти для кеширования
        proxy_cache my_cache;
        ## Число запросов, после которого ответ будет закеширован
        proxy_cache_min_uses  1;
        ## Какие методы кешируются
        proxy_cache_methods GET;
        ## Время кеширования для кодов ответа
        proxy_cache_valid  15m; # по умолчанию  200,  301,  302
        proxy_cache_valid  404  1m;
        proxy_cache_revalidate on;

        
        location = /test/ {
            return 301 /;
        }

        location /cache/ {
            proxy_pass http://main_backend/home;
            proxy_cache my_cache;
            proxy_cache_valid   200   302   60m;
            proxy_cache_valid   404   1m;
        }

        # REST API
        location /api/v1/ {
            proxy_no_cache   1;
            proxy_pass http://backend/api/v1/;
        }

        # SWAGGER
        location /api/v1/swagger {
            proxy_pass http://main_backend/swagger/index.html;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        location /swagger {
            proxy_pass http://main_backend/swagger/v1/swagger.yaml;
        }

        # LEGACY
        location /legacy {
            alias "C:/Users/gimna/Desktop/BMSTU/WEB/bmstu-web/static/";
            index old.zip;
            default_type application/zip;
            add_header Content-Disposition "attachment; filename=old.zip";
            allow all;
        }

        # README
        location /documentation {
            alias "C:/Users/gimna/Desktop/BMSTU/WEB/bmstu-web/";
            index README.md;
            default_type text/markdown; 
            charset utf-8;
            add_header Content-Disposition "inline; filename=README.md";
            allow all;
        }

        location /readme {
            alias "C:/Users/gimna/Desktop/BMSTU/WEB/bmstu-web/static/docs/";
            index README.html;
            try_files $uri $uri/ /README.html;
        } 

        # ROOT   
        location / {
            index index.html;
            try_files $uri $uri/ /index.html;
        }   
        
        # STATUS
		location /status {
            proxy_no_cache 1;
            stub_status;
		}

        location /admin/ {
            proxy_pass http://localhost:8081/phpMyAdmin/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        location /mirror1/api/v1/swagger {
            proxy_pass http://mirror_backend/swagger;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        location /mirror1/api/v1/ {
            proxy_no_cache   1;
            proxy_pass http://mirror_backend/api/v1/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }
    }
}